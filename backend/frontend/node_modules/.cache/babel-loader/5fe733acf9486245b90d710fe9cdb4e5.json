{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\sd-new-lila\\\\backend\\\\frontend\\\\src\\\\screens\\\\NotificationEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { Form, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport { listNotificationDetails, updateNotification } from '../actions/notificationActions';\nimport { NOTIFICATION_UPDATE_RESET } from '../constants/notificationConstants';\n\nfunction NotificationEditScreen({\n  match,\n  history\n}) {\n  _s();\n\n  const notificationId = match.params.id;\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [link, setLink] = useState('');\n  const dispatch = useDispatch();\n  const notificationDetails = useSelector(state => state.notificationDetails);\n  const {\n    error,\n    loading,\n    notification\n  } = notificationDetails;\n  const notificationUpdate = useSelector(state => state.notificationUpdate);\n  const {\n    error: errorUpdate,\n    loading: loadingUpdate,\n    success: successUpdate\n  } = notificationUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: NOTIFICATION_UPDATE_RESET\n      });\n      history.push('/admin/notificationcenterlist');\n    } else {\n      if (!notification.name || notification._id !== Number(notificationId)) {\n        dispatch(listNotificationDetails(notificationId));\n      } else {\n        setTitle(notification.title);\n        setDescription(notification.description);\n        setLink(notification.link);\n      }\n    }\n  }, [dispatch, notification, notificationId, history, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateNotification({\n      _id: notificationId,\n      title,\n      description,\n      link\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/notificationcenterlist\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Notification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 35\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 28\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 49\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter title\",\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"link\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter link\",\n            value: link,\n            onChange: e => setLink(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NotificationEditScreen, \"iLTtxljUUPgFxlHTwsjCKX8b/Y4=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = NotificationEditScreen;\nexport default NotificationEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationEditScreen\");","map":{"version":3,"sources":["E:/sd-new-lila/backend/frontend/src/screens/NotificationEditScreen.js"],"names":["React","useState","useEffect","axios","Link","Form","Button","useDispatch","useSelector","Loader","Message","FormContainer","listNotificationDetails","updateNotification","NOTIFICATION_UPDATE_RESET","NotificationEditScreen","match","history","notificationId","params","id","title","setTitle","description","setDescription","link","setLink","dispatch","notificationDetails","state","error","loading","notification","notificationUpdate","errorUpdate","loadingUpdate","success","successUpdate","type","push","name","_id","Number","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listNotificationDetails, updateNotification } from '../actions/notificationActions'\r\nimport { NOTIFICATION_UPDATE_RESET } from '../constants/notificationConstants'\r\n\r\n\r\nfunction NotificationEditScreen({ match, history }) {\r\n\r\n    const notificationId = match.params.id\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [link, setLink] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const notificationDetails = useSelector(state => state.notificationDetails)\r\n    const { error, loading, notification } = notificationDetails\r\n\r\n    const notificationUpdate = useSelector(state => state.notificationUpdate)\r\n    const { error: errorUpdate, loading: loadingUpdate, success: successUpdate } = notificationUpdate\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: NOTIFICATION_UPDATE_RESET })\r\n            history.push('/admin/notificationcenterlist')\r\n        } else {\r\n            if (!notification.name || notification._id !== Number(notificationId)) {\r\n                dispatch(listNotificationDetails(notificationId))\r\n            } else {\r\n                setTitle(notification.title)\r\n                setDescription(notification.description)\r\n                setLink(notification.link)\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }, [dispatch, notification, notificationId, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateNotification({\r\n            _id: notificationId,\r\n            title,\r\n            description,\r\n            link,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Link to='/admin/notificationcenterlist'>\r\n                Go Back\r\n            </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Notification</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                    : (\r\n                        <Form onSubmit={submitHandler}>\r\n\r\n                            <Form.Group controlId='title'>\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter title'\r\n                                    value={title}\r\n                                    onChange={(e) => setTitle(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='description'>\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter description'\r\n                                    value={description}\r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId='link'>\r\n                                <Form.Label>Description</Form.Label>\r\n                                <Form.Control\r\n\r\n                                    type='text'\r\n                                    placeholder='Enter link'\r\n                                    value={link}\r\n                                    onChange={(e) => setLink(e.target.value)}\r\n                                >\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n\r\n\r\n                            <Button type='submit' variant='primary'>\r\n                                Update\r\n                        </Button>\r\n\r\n                        </Form>\r\n                    )}\r\n\r\n            </FormContainer >\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default NotificationEditScreen"]},"metadata":{},"sourceType":"module"}